<?php
define('APPLICATION_NAME','application');

/**
 * URL Generation settings
 *
 * Do NOT use trailing slashes
 *
 * If your site is being proxied, change BASE_HOST to the hostname
 * used for the outside world.
 */
define('BASE_URI' , '/directory');
define('BASE_HOST', isset($_SERVER['HTTP_X_FORWARDED_HOST'])
                        ? $_SERVER['HTTP_X_FORWARDED_HOST']
                        : $_SERVER['SERVER_NAME']);
define('BASE_URL' , "https://".BASE_HOST.BASE_URI);

/**
 * Javascript libraries
 */
define('JQUERY',         BASE_URI.'/js/vendor/jquery-2.1.1');
define('INTL_TEL_INPUT', BASE_URI.'/js/vendor/intl-tel-input');

/**
 * Database Setup
 */
$DATABASES = [
    'default' => [
        'driver'   => 'Pdo_Mysql',
        'hostname' => 'localhost',
        'database' => 'application',
        'username' => 'application',
        'password' => 'password',
        'charset'  => 'utf8'
    ],
    'hr' => [
        'driver'   => 'Pdo',
        'dsn'      => 'odbc:hrDatabase',
        'username' => 'username',
        'password' => 'password'
    ]
];

/**
 * Directory Configuration
 *
 * This supports doing user authentication from multiple external
 * directories, such as LDAP or ADS. This is required since city staff
 * are in a seperate LDAP directory from public user accounts.
 * Classes that implement ExternalIdentity should have an entry here.
 *
 * See: ExternalIdentity
 */
$DIRECTORY_CONFIG = [
// Example for ADS style authentication
// 	'LDAP' => [
// 		'DIRECTORY_SERVER'             => 'ldaps://example.org:636',
// 		'DIRECTORY_BASE_DN'            => 'OU=Department,DC=example,DC=org',
// 		'DIRECTORY_USERNAME_ATTRIBUTE' => 'CN',
// 		'DIRECTORY_USER_BINDING'       => '{username}@example.org',
// 		'DIRECTORY_ADMIN_BINDING'      => 'admin@example.org',
// 		'DIRECTORY_ADMIN_PASS'         => 'password',
// 		'DIRECTORY_RESTRICTED'         => '',
//      'DIRECTORY_PROMOTED'           => '',
//      'DIRECTORY_NONPAYROLL'         => '',
//      'DIRECTORY_INTERNAL_IP'        => ''
// 	]
// Example for LDAP style authentication
// 	'LDAP' => [
// 		'DIRECTORY_SERVER'             => 'ldaps://example.org:636',
// 		'DIRECTORY_BASE_DN'            => 'ou=people,o=ldap.domain.somewhere',
// 		'DIRECTORY_USERNAME_ATTRIBUTE' => 'uid',
// 		'DIRECTORY_USER_BINDING'       => 'uid={username},ou=people,o=ldap.domain.somewhere',
// 		'DIRECTORY_ADMIN_BINDING'      => 'uid=admin,ou=people,o=ldap.domain.somewhere',
// 		'DIRECTORY_ADMIN_PASS'         => 'password',
// 		'DIRECTORY_RESTRICTED'         => '',
//      'DIRECTORY_PROMOTED'           => '',
//      'DIRECTORY_NONPAYROLL'         => '',
//      'DIRECTORY_INTERNAL_IP'        => ''
// 	]
];

/**
 * CAS authentication http://www.jasig.org/cas
 *
 * https://wiki.jasig.org/display/CASC/phpCAS
 *
 * phpCAS is a PHP library for handling the calls to the CAS service
 * It is the official library, part of the Jasig CAS project
 */
//define('CAS',APPLICATION_HOME.'/vendor/jasig/phpcas/source');
//define('CAS_SERVER','cas.somewhere.org');
//define('CAS_URI','cas');

define('DATE_FORMAT', 'n/j/Y H:i:s');
define('LOCALE', 'en_US');

/**
 * Skidder is a web service for error loggin.  This application supports
 * logging errors to a Skidder server.  You must register for an application_id
 * on the skidder server you want to post errors to.
 */
// $writer = new Blossom\Classes\Log\SkidderWriter('https://localhost/skidder/index', 3 );
// $logger = new Zend\Log\Logger();
// $logger->addWriter($writer);
// Zend\Log\Logger::registerErrorHandler($logger);
// Zend\Log\Logger::registerExceptionHandler($logger);
// Zend\Log\Logger::registerFatalErrorShutdownFunction($logger);
